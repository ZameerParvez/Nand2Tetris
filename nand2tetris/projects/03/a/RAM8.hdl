// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load,
        sel=address,
        a=ldr1,
        b=ldr2,
        c=ldr3,
        d=ldr4,
        e=ldr5,
        f=ldr6,
        g=ldr7,
        h=ldr8
    );

    Register(in=in,load=ldr1,out=or1);
    Register(in=in,load=ldr2,out=or2);
    Register(in=in,load=ldr3,out=or3);
    Register(in=in,load=ldr4,out=or4);
    Register(in=in,load=ldr5,out=or5);
    Register(in=in,load=ldr6,out=or6);
    Register(in=in,load=ldr7,out=or7);
    Register(in=in,load=ldr8,out=or8);

    Mux8Way16(
        a=or1,
        b=or2,
        c=or3,
        d=or4,
        e=or5,
        f=or6,
        g=or7,
        h=or8,
        sel=address,
        out=out
    );

}